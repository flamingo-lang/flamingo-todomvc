import f,{useContext as _,createContext as x}from"../../web_modules/react.js";import{Subject as b}from"../../web_modules/rxjs.js";import{map as h}from"../../web_modules/rxjs/operators.js";import{useObservable as j}from"../../web_modules/rxjs-hooks.js";import Q from"../../web_modules/flamingo-lang.js";import{run as v}from"./clingo.js";const a=x(null);export const Provider=({logic:e,children:t})=>f.createElement(a.Provider,{value:{runQuery:Q.makeSession(v,e),history:[["new_todo",{new_text:'"Learn logic programming 🤖"'}],["toggle_todo",{target:1}],["new_todo",{new_text:'"Build sweet apps 🚀"'}],["new_todo",{new_text:'"Verify them with Flamingo ❤️"'}]]}},t);const d=new b();let g;const c=new Map();export const useQuery=e=>{if(!c.has(e)){c.set(e,d.pipe(h(()=>{const r=g.get(e)??[];return r})));const{runQuery:s,history:o}=_(a);m=!0,w(s,o)}const t=c.get(e);return j(()=>t,[])};let i=!0,m=!0;const w=async(e,t)=>{if(!i&&!m)return;const s=Array.from(c.keys()).map(n=>n.replace(`
`,"")),o=[...s].map(n=>n.replace(`
`,"")),r=await e(o,t);g=r,d.next(),i=!1,m=!1};export const useDispatch=()=>{const{runQuery:e,history:t}=_(a);return(s,o)=>{(async()=>{const r=o??{},n=Object.keys(r).reduce((l,p)=>{const u=r[p];return l[p]=typeof u=="string"&&u.includes(" ")?`"${u}"`:u.toString(),l},{}),y=[s,n??{}];t.push(y),i=!0,w(e,t)})()}};
